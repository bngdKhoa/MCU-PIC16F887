CCS PCM C Compiler, Version 5.015, 5967               02-Oct-23 09:59

               Filename:   D:\Set up\VXL\Btap 04\Btap04_test.lst

               ROM used:   222 words (3%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           13 (4%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   058
0003:  NOP
.................... # INCLUDE <16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  C0
0009:  RETLW  F9
000A:  RETLW  A4
000B:  RETLW  B0
000C:  RETLW  99
000D:  RETLW  92
000E:  RETLW  82
000F:  RETLW  F8
0010:  RETLW  80
0011:  RETLW  90
0012:  MOVF   26,W
0013:  CLRF   78
0014:  SUBWF  25,W
0015:  BTFSC  03.0
0016:  GOTO   01A
0017:  MOVF   25,W
0018:  MOVWF  77
0019:  GOTO   026
001A:  CLRF   77
001B:  MOVLW  08
001C:  MOVWF  27
001D:  RLF    25,F
001E:  RLF    77,F
001F:  MOVF   26,W
0020:  SUBWF  77,W
0021:  BTFSC  03.0
0022:  MOVWF  77
0023:  RLF    78,F
0024:  DECFSZ 27,F
0025:  GOTO   01D
0026:  RETURN
....................  
.................... #list 
....................  
.................... # FUSES HS 
.................... # USE DELAY (CLOCK = 20M) 
*
0044:  MOVLW  24
0045:  MOVWF  04
0046:  BCF    03.7
0047:  MOVF   00,W
0048:  BTFSC  03.2
0049:  GOTO   057
004A:  MOVLW  06
004B:  MOVWF  78
004C:  CLRF   77
004D:  DECFSZ 77,F
004E:  GOTO   04D
004F:  DECFSZ 78,F
0050:  GOTO   04C
0051:  MOVLW  7B
0052:  MOVWF  77
0053:  DECFSZ 77,F
0054:  GOTO   053
0055:  DECFSZ 00,F
0056:  GOTO   04A
0057:  RETURN
.................... CONST UNSIGNED INT8 MA7DOAN [] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90}; 
.................... # DEFINE UP    PIN_B0 
.................... # DEFINE DW    PIN_B1 
.................... # DEFINE START PIN_B2 
.................... SIGNED INT8 DEM, I, SO; 
.................... VOID GIAIMA7DOAN (UNSIGNED INT8 SO) 
.................... { 
....................    OUTPUT_C (MA7DOAN[SO/10]); 
*
0027:  MOVF   24,W
0028:  MOVWF  25
0029:  MOVLW  0A
002A:  MOVWF  26
002B:  CALL   012
002C:  MOVF   78,W
002D:  CALL   004
002E:  MOVWF  25
002F:  MOVLW  00
0030:  MOVWF  23
0031:  BSF    03.5
0032:  CLRF   07
0033:  BCF    03.5
0034:  MOVF   25,W
0035:  MOVWF  07
....................    OUTPUT_D (MA7DOAN[SO%10]); 
0036:  MOVF   24,W
0037:  MOVWF  25
0038:  MOVLW  0A
0039:  MOVWF  26
003A:  CALL   012
003B:  MOVF   77,W
003C:  CALL   004
003D:  MOVWF  25
003E:  BSF    03.5
003F:  CLRF   08
0040:  BCF    03.5
0041:  MOVF   25,W
0042:  MOVWF  08
0043:  RETURN
.................... } 
.................... VOID MAIN () 
*
0058:  MOVF   03,W
0059:  ANDLW  1F
005A:  MOVWF  03
005B:  MOVLW  FF
005C:  MOVWF  23
005D:  BSF    03.5
005E:  BSF    03.6
005F:  MOVF   09,W
0060:  ANDLW  C0
0061:  MOVWF  09
0062:  BCF    03.6
0063:  BCF    1F.4
0064:  BCF    1F.5
0065:  MOVLW  00
0066:  BSF    03.6
0067:  MOVWF  08
0068:  BCF    03.5
0069:  CLRF   07
006A:  CLRF   08
006B:  CLRF   09
006C:  BCF    03.7
.................... { 
....................    SET_TRIS_C (0); 
006D:  MOVLW  00
006E:  BSF    03.5
006F:  BCF    03.6
0070:  MOVWF  07
0071:  BCF    03.5
0072:  MOVWF  23
....................    SET_TRIS_D (0); 
0073:  BSF    03.5
0074:  MOVWF  08
....................    SET_TRIS_B (0xFF); 
0075:  MOVLW  FF
0076:  MOVWF  06
....................    PORT_B_PULLUPS (TRUE); 
0077:  MOVLW  01
0078:  MOVWF  15
0079:  BCF    01.7
....................    DEM = 5; 
007A:  MOVLW  05
007B:  BCF    03.5
007C:  MOVWF  20
.................... GM: 
....................    GIAIMA7DOAN (DEM); 
007D:  MOVF   20,W
007E:  MOVWF  24
007F:  CALL   027
....................    IF (INPUT(UP) == 0 ) 
0080:  BSF    03.5
0081:  BSF    06.0
0082:  BCF    03.5
0083:  BTFSC  06.0
0084:  GOTO   09B
....................    { 
....................       DELAY_MS (10); 
0085:  MOVLW  0A
0086:  MOVWF  24
0087:  CALL   044
....................       IF (INPUT (UP) == 0) 
0088:  BSF    03.5
0089:  BSF    06.0
008A:  BCF    03.5
008B:  BTFSC  06.0
008C:  GOTO   09B
....................       {   
....................          WHILE (INPUT (UP) == 0) {} 
008D:  BSF    03.5
008E:  BSF    06.0
008F:  BCF    03.5
0090:  BTFSS  06.0
0091:  GOTO   08D
....................          DEM ++; 
0092:  INCF   20,F
....................          IF (DEM > 15) 
0093:  BTFSC  20.7
0094:  GOTO   09B
0095:  MOVF   20,W
0096:  SUBLW  0F
0097:  BTFSC  03.0
0098:  GOTO   09B
....................             DEM = 5; 
0099:  MOVLW  05
009A:  MOVWF  20
....................       } 
....................    } 
....................    IF (INPUT (DW)== 0) 
009B:  BSF    03.5
009C:  BSF    06.1
009D:  BCF    03.5
009E:  BTFSC  06.1
009F:  GOTO   0B7
....................    { 
....................       DELAY_MS (10); 
00A0:  MOVLW  0A
00A1:  MOVWF  24
00A2:  CALL   044
....................       IF (INPUT (DW) == 0) 
00A3:  BSF    03.5
00A4:  BSF    06.1
00A5:  BCF    03.5
00A6:  BTFSC  06.1
00A7:  GOTO   0B7
....................       { 
....................          WHILE (INPUT(DW) == 0) {} 
00A8:  BSF    03.5
00A9:  BSF    06.1
00AA:  BCF    03.5
00AB:  BTFSS  06.1
00AC:  GOTO   0A8
....................          DEM = DEM - 2; 
00AD:  MOVLW  02
00AE:  SUBWF  20,F
....................          IF (DEM < 5) 
00AF:  BTFSC  20.7
00B0:  GOTO   0B5
00B1:  MOVF   20,W
00B2:  SUBLW  04
00B3:  BTFSS  03.0
00B4:  GOTO   0B7
....................             DEM = 15; 
00B5:  MOVLW  0F
00B6:  MOVWF  20
....................       } 
....................    } 
....................    IF (INPUT (START)==0) 
00B7:  BSF    03.5
00B8:  BSF    06.2
00B9:  BCF    03.5
00BA:  BTFSC  06.2
00BB:  GOTO   0DC
....................    { 
....................       DELAY_MS (10); 
00BC:  MOVLW  0A
00BD:  MOVWF  24
00BE:  CALL   044
....................       IF (INPUT (START) == 0) 
00BF:  BSF    03.5
00C0:  BSF    06.2
00C1:  BCF    03.5
00C2:  BTFSC  06.2
00C3:  GOTO   0DC
....................       { 
....................          WHILE (INPUT (START) == 0) {} 
00C4:  BSF    03.5
00C5:  BSF    06.2
00C6:  BCF    03.5
00C7:  BTFSS  06.2
00C8:  GOTO   0C4
....................          FOR (I = 0; I <= DEM; I++) 
00C9:  CLRF   21
00CA:  MOVF   21,W
00CB:  XORLW  80
00CC:  MOVWF  77
00CD:  MOVF   20,W
00CE:  XORLW  80
00CF:  SUBWF  77,W
00D0:  BTFSC  03.2
00D1:  GOTO   0D4
00D2:  BTFSC  03.0
00D3:  GOTO   0DC
....................          { 
....................             GIAIMA7DOAN (I); 
00D4:  MOVF   21,W
00D5:  MOVWF  24
00D6:  CALL   027
....................             DELAY_MS (100); 
00D7:  MOVLW  64
00D8:  MOVWF  24
00D9:  CALL   044
00DA:  INCF   21,F
00DB:  GOTO   0CA
....................          } 
....................       } 
....................    } 
....................    GOTO GM; 
00DC:  GOTO   07D
.................... } 
....................           
00DD:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
